// <auto-generated />
using Brezelapp.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Brezelapp.Migrations
{
    [DbContext(typeof(BrezelMSSqlContext))]
    [Migration("20180510144720_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Brezelapp.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int?>("GeoLocId");

                    b.Property<string>("Street");

                    b.Property<string>("StreetNr");

                    b.Property<string>("Zipcode");

                    b.HasKey("Id");

                    b.HasIndex("GeoLocId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Brezelapp.Models.Brezel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("PriceId");

                    b.Property<int>("StoreId");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.HasIndex("StoreId");

                    b.ToTable("Brezels");
                });

            modelBuilder.Entity("Brezelapp.Models.GeoLoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Id");

                    b.ToTable("GeoLoc");
                });

            modelBuilder.Entity("Brezelapp.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Amount");

                    b.Property<string>("Currency");

                    b.HasKey("Id");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("Brezelapp.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BrezelId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("StoreId");

                    b.Property<string>("Text");

                    b.Property<string>("UserEmail")
                        .IsRequired();

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("BrezelId");

                    b.HasIndex("StoreId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Brezelapp.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Brezelapp.Models.Address", b =>
                {
                    b.HasOne("Brezelapp.Models.GeoLoc", "GeoLoc")
                        .WithMany()
                        .HasForeignKey("GeoLocId");
                });

            modelBuilder.Entity("Brezelapp.Models.Brezel", b =>
                {
                    b.HasOne("Brezelapp.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Brezelapp.Models.Store", "Store")
                        .WithMany("Brezels")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Brezelapp.Models.Rating", b =>
                {
                    b.HasOne("Brezelapp.Models.Brezel")
                        .WithMany("Ratings")
                        .HasForeignKey("BrezelId");

                    b.HasOne("Brezelapp.Models.Store")
                        .WithMany("Ratings")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("Brezelapp.Models.Store", b =>
                {
                    b.HasOne("Brezelapp.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
